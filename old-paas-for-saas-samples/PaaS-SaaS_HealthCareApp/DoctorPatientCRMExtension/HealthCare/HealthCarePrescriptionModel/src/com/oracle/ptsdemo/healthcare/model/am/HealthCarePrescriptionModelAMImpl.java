package com.oracle.ptsdemo.healthcare.model.am;


import com.oracle.ptsdemo.healthcare.business.HealthCareException;
import com.oracle.ptsdemo.healthcare.model.am.common.HealthCarePrescriptionModelAM;
import com.oracle.ptsdemo.healthcare.ws.HealthCare;
import com.oracle.ptsdemo.healthcare.wsclient.osc.opty.ServiceException;
import com.oracle.ptsdemo.healthcare.wsclient.osc.opty.custom.OpportunityProxyClient;

import oracle.jbo.NameValuePairs;
import oracle.jbo.Row;
import oracle.jbo.RowSetIterator;
import oracle.jbo.ViewCriteria;
import oracle.jbo.ViewObject;
import oracle.jbo.server.ApplicationModuleImpl;
import oracle.jbo.server.ViewLinkImpl;
import oracle.jbo.server.ViewObjectImpl;


// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Mon Jan 13 10:23:23 BRST 2014
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class HealthCarePrescriptionModelAMImpl extends ApplicationModuleImpl implements HealthCarePrescriptionModelAM {
    /**
     * This is the default constructor (do not remove).
     */
    public HealthCarePrescriptionModelAMImpl() {
    }

    /**
     * Container's getter for MedicationView.
     * @return MedicationView
     */
    public ViewObjectImpl getMedicationView() {
        return (ViewObjectImpl)findViewObject("MedicationView");
    }

    /**
     * Container's getter for PharmacyView.
     * @return PharmacyView
     */
    public ViewObjectImpl getPharmacyView() {
        return (ViewObjectImpl)findViewObject("PharmacyView");
    }

    /**
     * Container's getter for PrescriptionView.
     * @return PrescriptionView
     */
    public ViewObjectImpl getPrescriptionView() {
        return (ViewObjectImpl)findViewObject("PrescriptionView");
    }

    /**
     * Container's getter for PharmacyMedicationView2.
     * @return PharmacyMedicationView2
     */
    public ViewObjectImpl getPharmacyMedicationView2() {
        return (ViewObjectImpl)findViewObject("PharmacyMedicationView2");
    }

    /**
     * Container's getter for PharmacyMedicationView.
     * @return PharmacyMedicationView
     */
    public ViewObjectImpl getPharmacyMedicationView() {
        return (ViewObjectImpl)findViewObject("PharmacyMedicationView");
    }

    /**
     * Container's getter for PrescriptionMedicationView2.
     * @return PrescriptionMedicationView2
     */
    public ViewObjectImpl getPrescriptionMedicationView2() {
        return (ViewObjectImpl)findViewObject("PrescriptionMedicationView2");
    }

    /**
     * Container's getter for PrescriptionMedicationView.
     * @return PrescriptionMedicationView
     */
    public ViewObjectImpl getPrescriptionMedicationView() {
        return (ViewObjectImpl)findViewObject("PrescriptionMedicationView");
    }

    /**
     * Container's getter for MedicationFk1Link1.
     * @return MedicationFk1Link1
     */
    public ViewLinkImpl getMedicationFk1Link1() {
        return (ViewLinkImpl)findViewLink("MedicationFk1Link1");
    }

    /**
     * Container's getter for PharmacyIdFk1Link1.
     * @return PharmacyIdFk1Link1
     */
    public ViewLinkImpl getPharmacyIdFk1Link1() {
        return (ViewLinkImpl)findViewLink("PharmacyIdFk1Link1");
    }

    /**
     * Container's getter for MedicationFkLink1.
     * @return MedicationFkLink1
     */
    public ViewLinkImpl getMedicationFkLink1() {
        return (ViewLinkImpl)findViewLink("MedicationFkLink1");
    }

    /**
     * Container's getter for PrescriptionFkLink1.
     * @return PrescriptionFkLink1
     */
    public ViewLinkImpl getPrescriptionFkLink1() {
        return (ViewLinkImpl)findViewLink("PrescriptionFkLink1");
    }

    /**
     *Insert a new row into Prescription
     * @param visitId
     * @param patientEmail
     * @param doctorId
     * @param patientId
     * @param doctorName
     * @param patientName
     */
    public void createAndInitPrescription(String visitId, String patientEmail, String doctorId, String patientId, String doctorName, String patientName) {

        System.out.println("******************** createNewPrescription ****************");
        ViewObjectImpl prescription = getPrescriptionView();
        NameValuePairs nvp = new NameValuePairs();

        nvp.setAttribute("VisitId", visitId);
        nvp.setAttribute("DoctorId", doctorId);
        nvp.setAttribute("PatientId", patientId);
        nvp.setAttribute("DoctorName", doctorName);
        nvp.setAttribute("PatientName", patientName);
        nvp.setAttribute("PatientEmail", patientEmail);

        Row row = prescription.createAndInitRow(nvp);
        row.setNewRowState(oracle.jbo.Row.STATUS_INITIALIZED);
        prescription.insertRow(row);
        prescription.setCurrentRow(row);
    }

    /**
     * Send the current Prescription object to the HealthCareService
     */
    public void sendPrescriptionToPharmacy(String doctorName, String jwtToken) {
        ViewObject vo = findViewObject("PrescriptionView");
        Row r = vo.getCurrentRow();
        String prescriptionId =
            String.valueOf(r.getAttribute("PrescriptionId"));
        HealthCare hcare = new HealthCare();
        
        hcare.loadPrescription(prescriptionId, doctorName, jwtToken);
        
    }

    public void updateOSCFields(String patientId, String jwtToken) throws ServiceException
                                                        {
        String gDoctorName;
        String gPatientName;
        String gVisitDescription;

        ViewObject prescriptionVO = this.getPrescriptionView();

        ViewCriteria vc =
            prescriptionVO.getViewCriteriaManager().getViewCriteria("PrescriptionByPatientIdViewCriteria");        
        
        vc.setCriteriaMode(ViewCriteria.CRITERIA_MODE_QUERY);
        prescriptionVO.applyViewCriteria(vc);
        
        prescriptionVO.ensureVariableManager().setVariableValue("patientIdVar",
                                                                patientId ==
                                                                null ? "-1" :
                                                                patientId);                       
        prescriptionVO.executeQuery();        
                       
        OpportunityProxyClient client = new OpportunityProxyClient();
        
        RowSetIterator rsi = prescriptionVO.createRowSetIterator(null);
        rsi.reset();
        Row row;
        while (rsi.hasNext())
        {
             row= rsi.next();

            //Getting OSC Fields via WS
            String visitId = row.getAttribute("VisitId").toString();
            
            System.out.println("Calling OpportunityWS for visitid: "+visitId + " - jwtToken="+jwtToken);
            //call OSC WS            
            client.getOpportunityDescription(visitId, jwtToken);
            gVisitDescription = client.getVisitDescription();
            gDoctorName = client.getDoctorName();
            gPatientName = client.getPatientName();

            row.setAttribute("DoctorName", gDoctorName);
            row.setAttribute("PatientName", gPatientName);
            row.setAttribute("VisitDescription", gVisitDescription);
            
            System.out.println("Retrieved data from Office Visit: "+visitId);
        }

        prescriptionVO.first();
        System.out.println("******************** PrescriptionMedicationAppModuleImpl.updateOSCFields -- finished");
    }


    /**
     * Container's getter for PrescriptionGanttViewObj2.
     * @return PrescriptionGanttViewObj2
     */
    public ViewObjectImpl getPrescriptionGanttView() {
        return (ViewObjectImpl)findViewObject("PrescriptionGanttView");
    }

    /**
     * Container's getter for PrescriptionMedicationGanttView2.
     * @return PrescriptionMedicationGanttView2
     */
    public ViewObjectImpl getPrescriptionMedicationGanttView() {
        return (ViewObjectImpl)findViewObject("PrescriptionMedicationGanttView");
    }

    /**
     * Container's getter for PrescriptionMedicationGanttViewLink.
     * @return PrescriptionMedicationGanttViewLink
     */
    public ViewLinkImpl getPrescriptionMedicationGanttViewLink() {
        return (ViewLinkImpl)findViewLink("PrescriptionMedicationGanttViewLink");
    }
}
