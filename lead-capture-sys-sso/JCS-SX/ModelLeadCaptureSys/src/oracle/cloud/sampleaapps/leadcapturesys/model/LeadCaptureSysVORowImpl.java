/* Copyright (c) 2015, Oracle and/or its affiliates. All rights reserved */
package oracle.cloud.sampleaapps.leadcapturesys.model;

import oracle.cloud.sampleaapps.leadcapturesys.model.common.LeadCaptureSysVORow;

import oracle.jbo.RowSet;
import oracle.jbo.domain.Date;
import oracle.jbo.domain.Number;
import oracle.jbo.domain.Timestamp;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Tue Apr 14 14:59:46 CEST 2015
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class LeadCaptureSysVORowImpl extends ViewRowImpl implements LeadCaptureSysVORow {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        ActivityId {
            public Object get(LeadCaptureSysVORowImpl obj) {
                return obj.getActivityId();
            }

            public void put(LeadCaptureSysVORowImpl obj, Object value) {
                obj.setActivityId((Number)value);
            }
        }
        ,
        ProspectName {
            public Object get(LeadCaptureSysVORowImpl obj) {
                return obj.getProspectName();
            }

            public void put(LeadCaptureSysVORowImpl obj, Object value) {
                obj.setProspectName((String)value);
            }
        }
        ,
        DemoCompleted {
            public Object get(LeadCaptureSysVORowImpl obj) {
                return obj.getDemoCompleted();
            }

            public void put(LeadCaptureSysVORowImpl obj, Object value) {
                obj.setDemoCompleted((String)value);
            }
        }
        ,
        LeadRecUpdated {
            public Object get(LeadCaptureSysVORowImpl obj) {
                return obj.getLeadRecUpdated();
            }

            public void put(LeadCaptureSysVORowImpl obj, Object value) {
                obj.setLeadRecUpdated((String)value);
            }
        }
        ,
        VisitDate {
            public Object get(LeadCaptureSysVORowImpl obj) {
                return obj.getVisitDate();
            }

            public void put(LeadCaptureSysVORowImpl obj, Object value) {
                obj.setVisitDate((Date)value);
            }
        }
        ,
        StartTime {
            public Object get(LeadCaptureSysVORowImpl obj) {
                return obj.getStartTime();
            }

            public void put(LeadCaptureSysVORowImpl obj, Object value) {
                obj.setStartTime((Timestamp)value);
            }
        }
        ,
        EndTime {
            public Object get(LeadCaptureSysVORowImpl obj) {
                return obj.getEndTime();
            }

            public void put(LeadCaptureSysVORowImpl obj, Object value) {
                obj.setEndTime((Timestamp)value);
            }
        }
        ,
        Notes {
            public Object get(LeadCaptureSysVORowImpl obj) {
                return obj.getNotes();
            }

            public void put(LeadCaptureSysVORowImpl obj, Object value) {
                obj.setNotes((String)value);
            }
        }
        ,
        LeadCaptureSysVO1 {
            public Object get(LeadCaptureSysVORowImpl obj) {
                return obj.getLeadCaptureSysVO1();
            }

            public void put(LeadCaptureSysVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        public abstract Object get(LeadCaptureSysVORowImpl object);

        public abstract void put(LeadCaptureSysVORowImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int ACTIVITYID = AttributesEnum.ActivityId.index();
    public static final int PROSPECTNAME = AttributesEnum.ProspectName.index();
    public static final int DEMOCOMPLETED = AttributesEnum.DemoCompleted.index();
    public static final int LEADRECUPDATED = AttributesEnum.LeadRecUpdated.index();
    public static final int VISITDATE = AttributesEnum.VisitDate.index();
    public static final int STARTTIME = AttributesEnum.StartTime.index();
    public static final int ENDTIME = AttributesEnum.EndTime.index();
    public static final int NOTES = AttributesEnum.Notes.index();
    public static final int LEADCAPTURESYSVO1 = AttributesEnum.LeadCaptureSysVO1.index();

    /**
     * This is the default constructor (do not remove).
     */
    public LeadCaptureSysVORowImpl() {
    }

    /**
     * Gets LeadCaptureSysEO entity object.
     * @return the LeadCaptureSysEO
     */
    public LeadCaptureSysEOImpl getLeadCaptureSysEO() {
        return (LeadCaptureSysEOImpl)getEntity(0);
    }

    /**
     * Gets the attribute value for ACTIVITY_ID using the alias name ActivityId.
     * @return the ACTIVITY_ID
     */
    public Number getActivityId() {
        return (Number) getAttributeInternal(ACTIVITYID);
    }

    /**
     * Sets <code>value</code> as attribute value for ACTIVITY_ID using the alias name ActivityId.
     * @param value value to set the ACTIVITY_ID
     */
    public void setActivityId(Number value) {
        setAttributeInternal(ACTIVITYID, value);
    }

    /**
     * Gets the attribute value for PROSPECT_NAME using the alias name ProspectName.
     * @return the PROSPECT_NAME
     */
    public String getProspectName() {
        return (String) getAttributeInternal(PROSPECTNAME);
    }

    /**
     * Sets <code>value</code> as attribute value for PROSPECT_NAME using the alias name ProspectName.
     * @param value value to set the PROSPECT_NAME
     */
    public void setProspectName(String value) {
        setAttributeInternal(PROSPECTNAME, value);
    }

    /**
     * Gets the attribute value for DEMO_COMPLETED using the alias name DemoCompleted.
     * @return the DEMO_COMPLETED
     */
    public String getDemoCompleted() {
        return (String) getAttributeInternal(DEMOCOMPLETED);
    }

    /**
     * Sets <code>value</code> as attribute value for DEMO_COMPLETED using the alias name DemoCompleted.
     * @param value value to set the DEMO_COMPLETED
     */
    public void setDemoCompleted(String value) {
        setAttributeInternal(DEMOCOMPLETED, value);
    }

    /**
     * Gets the attribute value for LEAD_REC_UPDATED using the alias name LeadRecUpdated.
     * @return the LEAD_REC_UPDATED
     */
    public String getLeadRecUpdated() {
        return (String) getAttributeInternal(LEADRECUPDATED);
    }

    /**
     * Sets <code>value</code> as attribute value for LEAD_REC_UPDATED using the alias name LeadRecUpdated.
     * @param value value to set the LEAD_REC_UPDATED
     */
    public void setLeadRecUpdated(String value) {
        setAttributeInternal(LEADRECUPDATED, value);
    }

    /**
     * Gets the attribute value for VISIT_DATE using the alias name VisitDate.
     * @return the VISIT_DATE
     */
    public Date getVisitDate() {
        return (Date) getAttributeInternal(VISITDATE);
    }

    /**
     * Sets <code>value</code> as attribute value for VISIT_DATE using the alias name VisitDate.
     * @param value value to set the VISIT_DATE
     */
    public void setVisitDate(Date value) {
        setAttributeInternal(VISITDATE, value);
    }

    /**
     * Gets the attribute value for START_TIME using the alias name StartTime.
     * @return the START_TIME
     */
    public Timestamp getStartTime() {
        return (Timestamp) getAttributeInternal(STARTTIME);
    }

    /**
     * Sets <code>value</code> as attribute value for START_TIME using the alias name StartTime.
     * @param value value to set the START_TIME
     */
    public void setStartTime(Timestamp value) {
        setAttributeInternal(STARTTIME, value);
    }

    /**
     * Gets the attribute value for END_TIME using the alias name EndTime.
     * @return the END_TIME
     */
    public Timestamp getEndTime() {
        return (Timestamp) getAttributeInternal(ENDTIME);
    }

    /**
     * Sets <code>value</code> as attribute value for END_TIME using the alias name EndTime.
     * @param value value to set the END_TIME
     */
    public void setEndTime(Timestamp value) {
        setAttributeInternal(ENDTIME, value);
    }

    /**
     * Gets the attribute value for NOTES using the alias name Notes.
     * @return the NOTES
     */
    public String getNotes() {
        return (String) getAttributeInternal(NOTES);
    }

    /**
     * Sets <code>value</code> as attribute value for NOTES using the alias name Notes.
     * @param value value to set the NOTES
     */
    public void setNotes(String value) {
        setAttributeInternal(NOTES, value);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LeadCaptureSysVO1.
     */
    public RowSet getLeadCaptureSysVO1() {
        return (RowSet)getAttributeInternal(LEADCAPTURESYSVO1);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index,
                                           AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value,
                                         AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }
}
